{"version":3,"file":"format-years-calendar.js","sourceRoot":"","sources":["../../../.tmp/datepicker/engine/format-years-calendar.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,MAAM,MAAM,GAAG,CAAC,CAAC;AACjB,MAAM,KAAK,GAAG,CAAC,CAAC;AAChB,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,GAAG,KAAK,CAAC;AAC/C,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,MAAM,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;AAE1B,MAAM,8BACJ,QAAc,EACd,aAAsC;IAEtC,MAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;IAChE,MAAM,aAAa,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;IAC5D,MAAM,WAAW,GAAG,YAAY,CAE9B,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI;QACJ,KAAK,EAAE,UAAU,CAAC,IAAI,EAAE,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,MAAM,CAAC;KACvE,CAAC,CAAC,CAAC;IACJ,MAAM,SAAS,GAAG,oBAAoB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAEnE,MAAM,CAAC;QACL,KAAK,EAAE,WAAW;QAClB,UAAU,EAAE,EAAE;QACd,SAAS;KACV,CAAC;CACH;AAED,8BACE,WAAsC,EACtC,aAAsC;IAEtC,MAAM,IAAI,GAAG,UAAU,CACrB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EACtB,aAAa,CAAC,SAAS,EACvB,aAAa,CAAC,MAAM,CACrB,CAAC;IACF,MAAM,EAAE,GAAG,UAAU,CACnB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EACvC,aAAa,CAAC,SAAS,EACvB,aAAa,CAAC,MAAM,CACrB,CAAC;IAEF,MAAM,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,CAAC;CAC1B","sourcesContent":["import {\n  DatepickerFormatOptions,\n  YearsCalendarViewModel,\n  CalendarCellViewModel\n} from '../models';\nimport { shiftDate, formatDate } from 'ngx-bootstrap/chronos';\nimport { createMatrix } from '../utils/matrix-utils';\n\nconst height = 4;\nconst width = 4;\nexport const yearsPerCalendar = height * width;\nconst initialShift = (Math.floor(yearsPerCalendar / 2) - 1) * -1;\nconst shift = { year: 1 };\n\nexport function formatYearsCalendar(\n  viewDate: Date,\n  formatOptions: DatepickerFormatOptions\n): YearsCalendarViewModel {\n  const initialDate = shiftDate(viewDate, { year: initialShift });\n  const matrixOptions = { width, height, initialDate, shift };\n  const yearsMatrix = createMatrix<\n    CalendarCellViewModel\n  >(matrixOptions, date => ({\n    date,\n    label: formatDate(date, formatOptions.yearLabel, formatOptions.locale)\n  }));\n  const yearTitle = formatYearRangeTitle(yearsMatrix, formatOptions);\n\n  return {\n    years: yearsMatrix,\n    monthTitle: '',\n    yearTitle\n  };\n}\n\nfunction formatYearRangeTitle(\n  yearsMatrix: CalendarCellViewModel[][],\n  formatOptions: DatepickerFormatOptions\n): string {\n  const from = formatDate(\n    yearsMatrix[0][0].date,\n    formatOptions.yearTitle,\n    formatOptions.locale\n  );\n  const to = formatDate(\n    yearsMatrix[height - 1][width - 1].date,\n    formatOptions.yearTitle,\n    formatOptions.locale\n  );\n\n  return `${from} - ${to}`;\n}\n"]}
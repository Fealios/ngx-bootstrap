{"version":3,"file":"bs-datepicker-navigation-view.component.js","sourceRoot":"","sources":["../../../../.tmp/datepicker/themes/bs/bs-datepicker-navigation-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,qBAAqB,EAEtB,MAAM,cAAc,CAAC;AA4BtB,MAAM;;0BAGmB,IAAI,YAAY,EAAyB;0BACzC,IAAI,YAAY,EAAwB;;IAE/D,KAAK,CAAC,IAAa;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,EAAE,CAC7D,CAAC;KACH;IAED,IAAI,CAAC,QAA8B;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChC;;;YAxCF,SAAS,SAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;GAqBT;aACF;;;;yBAEE,KAAK;2BAEL,MAAM;2BACN,MAAM","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport {\n  BsDatepickerViewMode,\n  BsNavigationDirection,\n  DaysCalendarViewModel\n} from '../../models';\n\n@Component({\n  selector: 'bs-datepicker-navigation-view',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <button class=\"previous\"\n            [disabled]=\"calendar.disableLeftArrow\"\n            [style.visibility]=\"calendar.hideLeftArrow ? 'hidden' : 'visible'\"\n            (click)=\"navTo(true)\"><span>&lsaquo;</span>\n    </button>\n\n    <button class=\"current\"\n            *ngIf=\"calendar.monthTitle\"\n            (click)=\"view('month')\"\n    ><span>{{ calendar.monthTitle }}</span>\n    </button>\n\n    <button class=\"current\" (click)=\"view('year')\"\n    ><span>{{ calendar.yearTitle }}</span></button>\n\n    <button class=\"next\"\n            [disabled]=\"calendar.disableRightArrow\"\n            [style.visibility]=\"calendar.hideRightArrow ? 'hidden' : 'visible'\"\n            (click)=\"navTo(false)\"><span>&rsaquo;</span>\n    </button>\n  `\n})\nexport class BsDatepickerNavigationViewComponent {\n  @Input() calendar: DaysCalendarViewModel;\n\n  @Output() onNavigate = new EventEmitter<BsNavigationDirection>();\n  @Output() onViewMode = new EventEmitter<BsDatepickerViewMode>();\n\n  navTo(down: boolean): void {\n    this.onNavigate.emit(\n      down ? BsNavigationDirection.DOWN : BsNavigationDirection.UP\n    );\n  }\n\n  view(viewMode: BsDatepickerViewMode): void {\n    this.onViewMode.emit(viewMode);\n  }\n}\n"]}
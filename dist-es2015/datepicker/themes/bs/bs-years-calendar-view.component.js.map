{"version":3,"file":"bs-years-calendar-view.component.js","sourceRoot":"","sources":["../../../../.tmp/datepicker/themes/bs/bs-years-calendar-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AACtE,OAAO,EAEL,qBAAqB,EAKtB,MAAM,cAAc,CAAC;AA6BtB,MAAM;;0BAGmB,IAAI,YAAY,EAAqB;0BACrC,IAAI,YAAY,EAAwB;wBAE1C,IAAI,YAAY,EAAyB;uBAC1C,IAAI,YAAY,EAAkB;;IAEtD,UAAU,CAAC,KAA4B;QACrC,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,gBAAgB,EAAE,EAAE,CAAC,CAAC;KACnE;IAED,QAAQ,CAAC,IAA2B;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,SAAS,CAAC,IAA2B,EAAE,SAAkB;QACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;KACxC;IAED,cAAc,CAAC,KAA2B;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;;;YAnDF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;GAuBT;aACF;;;;yBAEE,KAAK;2BAEL,MAAM;2BACN,MAAM;yBAEN,MAAM;wBACN,MAAM","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { yearsPerCalendar } from '../../engine/format-years-calendar';\nimport {\n  BsDatepickerViewMode,\n  BsNavigationDirection,\n  BsNavigationEvent,\n  CalendarCellViewModel,\n  CellHoverEvent,\n  YearsCalendarViewModel\n} from '../../models';\n\n@Component({\n  selector: 'bs-years-calendar-view',\n  template: `\n    <bs-calendar-layout>\n      <bs-datepicker-navigation-view\n        [calendar]=\"calendar\"\n        (onNavigate)=\"navigateTo($event)\"\n        (onViewMode)=\"changeViewMode($event)\"\n      ></bs-datepicker-navigation-view>\n\n      <table role=\"grid\" class=\"years\">\n        <tbody>\n        <tr *ngFor=\"let row of calendar.years\">\n          <td *ngFor=\"let year of row\" role=\"gridcell\"\n              (click)=\"viewYear(year)\"\n              (mouseenter)=\"hoverYear(year, true)\"\n              (mouseleave)=\"hoverYear(year, false)\"\n              [class.disabled]=\"year.isDisabled\"\n              [class.is-highlighted]=\"year.isHovered\">\n            <span>{{ year.label }}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </bs-calendar-layout>\n  `\n})\nexport class BsYearsCalendarViewComponent {\n  @Input() calendar: YearsCalendarViewModel;\n\n  @Output() onNavigate = new EventEmitter<BsNavigationEvent>();\n  @Output() onViewMode = new EventEmitter<BsDatepickerViewMode>();\n\n  @Output() onSelect = new EventEmitter<CalendarCellViewModel>();\n  @Output() onHover = new EventEmitter<CellHoverEvent>();\n\n  navigateTo(event: BsNavigationDirection): void {\n    const step = BsNavigationDirection.DOWN === event ? -1 : 1;\n    this.onNavigate.emit({ step: { year: step * yearsPerCalendar } });\n  }\n\n  viewYear(year: CalendarCellViewModel) {\n    this.onSelect.emit(year);\n  }\n\n  hoverYear(cell: CalendarCellViewModel, isHovered: boolean) {\n    this.onHover.emit({ cell, isHovered });\n  }\n\n  changeViewMode(event: BsDatepickerViewMode): void {\n    this.onViewMode.emit(event);\n  }\n}\n"]}
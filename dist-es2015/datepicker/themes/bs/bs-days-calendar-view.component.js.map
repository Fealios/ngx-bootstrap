{"version":3,"file":"bs-days-calendar-view.component.js","sourceRoot":"","sources":["../../../../.tmp/datepicker/themes/bs/bs-days-calendar-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,qBAAqB,EAMtB,MAAM,cAAc,CAAC;AA2CtB,MAAM;;0BAImB,IAAI,YAAY,EAAqB;0BACrC,IAAI,YAAY,EAAwB;wBAE1C,IAAI,YAAY,EAAgB;uBACjC,IAAI,YAAY,EAAkB;;IAEtD,UAAU,CAAC,KAA4B;QACrC,MAAM,IAAI,GAAG,qBAAqB,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACjD;IAED,cAAc,CAAC,KAA2B;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;IAED,SAAS,CAAC,KAAmB;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,QAAQ,CAAC,IAAkB,EAAE,SAAkB;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;KACxC;;;YAlEF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;;gBAEjC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCT;aACF;;;;yBAEE,KAAK;wBACL,KAAK;2BAEL,MAAM;2BACN,MAAM;yBAEN,MAAM;wBACN,MAAM","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport {\n  BsDatepickerViewMode,\n  BsNavigationDirection,\n  BsNavigationEvent,\n  CellHoverEvent,\n  DatepickerRenderOptions,\n  DaysCalendarViewModel,\n  DayViewModel\n} from '../../models';\n\n@Component({\n  selector: 'bs-days-calendar-view',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bs-calendar-layout>\n      <bs-datepicker-navigation-view\n        [calendar]=\"calendar\"\n        (onNavigate)=\"navigateTo($event)\"\n        (onViewMode)=\"changeViewMode($event)\"\n      ></bs-datepicker-navigation-view>\n\n      <!--days matrix-->\n      <table role=\"grid\" class=\"days weeks\">\n        <thead>\n        <tr>\n          <!--if show weeks-->\n          <th *ngIf=\"options.showWeekNumbers\"></th>\n          <th *ngFor=\"let weekday of calendar.weekdays; let i = index\"\n              aria-label=\"weekday\">{{ calendar.weekdays[i] }}\n          </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let week of calendar.weeks; let i = index\">\n          <td class=\"week\" *ngIf=\"options.showWeekNumbers\">\n            <span>{{ calendar.weekNumbers[i] }}</span>\n          </td>\n          <td *ngFor=\"let day of week.days\" role=\"gridcell\">\n          <span bsDatepickerDayDecorator\n                [day]=\"day\"\n                (click)=\"selectDay(day)\"\n                (mouseenter)=\"hoverDay(day, true)\"\n                (mouseleave)=\"hoverDay(day, false)\">{{ day.label }}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n\n    </bs-calendar-layout>\n  `\n})\nexport class BsDaysCalendarViewComponent {\n  @Input() calendar: DaysCalendarViewModel;\n  @Input() options: DatepickerRenderOptions;\n\n  @Output() onNavigate = new EventEmitter<BsNavigationEvent>();\n  @Output() onViewMode = new EventEmitter<BsDatepickerViewMode>();\n\n  @Output() onSelect = new EventEmitter<DayViewModel>();\n  @Output() onHover = new EventEmitter<CellHoverEvent>();\n\n  navigateTo(event: BsNavigationDirection): void {\n    const step = BsNavigationDirection.DOWN === event ? -1 : 1;\n    this.onNavigate.emit({ step: { month: step } });\n  }\n\n  changeViewMode(event: BsDatepickerViewMode): void {\n    this.onViewMode.emit(event);\n  }\n\n  selectDay(event: DayViewModel): void {\n    this.onSelect.emit(event);\n  }\n\n  hoverDay(cell: DayViewModel, isHovered: boolean): void {\n    this.onHover.emit({ cell, isHovered });\n  }\n}\n"]}